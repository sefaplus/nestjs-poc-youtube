version: "3"
services:
  db:
    image: postgres
    container_name: yt_db
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5432:5432

  uploading-service:
    build:
      context: ./uploading/.
    container_name: uploading_service
    depends_on:
      - minio-service
      - db
    working_dir: /app
    restart: unless-stopped
    command: yarn start
    ports:
      - 3000:3000

  encoding-service:
    build:
      context: ./encoding/.
    container_name: encoding_service
    depends_on:
      - minio-service
      - db
    working_dir: /app
    restart: unless-stopped
    command: yarn start
    ports:
      - 3005:3005

  minio-service:
    image: minio/minio
    container_name: minio-service
    restart: always
    ports:
      - 9000:9000
      - 9099:9099
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_SERVER_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SERVER_SECRET_KEY}
    command: server --address ":9099" --console-address ":9000" /data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio-service
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add youtubeminio http://minio-service:9099 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb youtubeminio/youtube;
      /usr/bin/mc policy set download youtubeminio/youtube;
      exit 0;
      "

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
      - RMQ_USER=${RMQ_USER} 
      - RMQ_PWD=${RMQ_PWD}
    volumes:
      - ./rabbitmq/.:/etc/rabbitmq/conf.d/.
    ports:
      - 5672:5672
      - 15672:15672
